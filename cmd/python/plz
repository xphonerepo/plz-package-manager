#!/usr/bin/env python

# This product is under the MIT license.
#
# Copyright (c) 2010,
#
# Ben Caldwell      http://twitter.com/lankzy
# Wei Zhuo          http://twitter.com/xwz
#
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this software and associated documentation
# files (the "Software"), to deal in the Software without
# restriction, including without limitation the rights to use,
# copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following
# conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.
#
# rev: $Id$

import inspect, sys

def install_action(packages, options={}):
    """
    Installs a list of packages.
    usage: plz install PACKAGES...

    Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque id consectetur
    urna. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere 
    cubilia Curae; Morbi adipiscing congue massa a imperdiet. Integer et nulla 
    posuere urna lobortis rhoncus id convallis lacus.

    Valid options:
        -n [--dryrun]           : do a dry run install
        -q [--quiet]            : print nothing, or only summary information
        --force                 : force operation to run
    """
    print options, args

def help_action(action=None, options={}):
    """
    Display help information for an action.
    usage: plz help ACTION
    """
    print get_action_doc(action) or default_help()

def default_help():
    info = """
    usage: plz <command> [options] [args]
    Type 'plz help <command>' for help on a specific command.

    Available actions:
        %(actions)s
    
    plz is a simple package management system.
    For additional information, see http://getplz.com/
    rev: $Id$
    """
    actions = "\n    ".join(k for (k,v) in available_actions())
    return inspect.cleandoc(info) % locals()

def get_action_doc(action):
    """
    Returns the documentation for an action, empty if unknown action.
    """
    return inspect.cleandoc(dict(available_actions()).pop(action, None).__doc__ or "")

def available_actions():
    return [(a[:-7], f) for (a,f) in globals().items() 
                if type(f).__name__ == 'function' and a[-7:] == '_action']

if __name__ == "__main__":
    help_action(sys.argv[-1])
